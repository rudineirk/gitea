{{template "base/head" .}}
<div class="repository">
	{{template "repo/header" .}}
	<div class="ui container">
		<div class="ui three column stackable grid">
			<div class="column">
				{{template "repo/issue/navbar" .}}
			</div>
			<div class="column center aligned">
				{{template "repo/issue/search" .}}
			</div>
			<div class="column right aligned">
				{{if .PageIsIssueList}}
					<a class="ui green button" href="{{.RepoLink}}/issues/new">{{.i18n.Tr "repo.issues.new"}}</a>
				{{else}}
					<a class="ui green button {{if not .PullRequestCtx.Allowed}}disabled{{end}}" href="{{if .PullRequestCtx.Allowed}}{{.PullRequestCtx.BaseRepo.Link}}/compare/{{.Repository.DefaultBranch}}...{{.PullRequestCtx.HeadInfo}}{{end}}">{{.i18n.Tr "repo.pulls.new"}}</a>
				{{end}}
			</div>
		</div>
		<div class="ui divider"></div>
		<div id="issue-filters" class="ui stackable grid">
			<div class="twelve wide right aligned column">
				<div class="ui secondary filter stackable menu">
					<!-- Milestone -->
					<div class="ui {{if not .Milestones}}disabled{{end}} dropdown jump item">
						<span class="text">
							{{.i18n.Tr "repo.issues.filter_milestone"}}
							<i class="dropdown icon"></i>
						</span>
						<div class="menu">
							<a class="item" href="{{$.Link}}?q={{$.Keyword}}&type={{$.ViewType}}&sort={{$.SortType}}&state={{$.State}}&labels={{.SelectLabels}}&assignee={{$.AssigneeID}}">{{.i18n.Tr "repo.issues.filter_milestone_no_select"}}</a>
							{{range .Milestones}}
								<a class="{{if eq $.MilestoneID .ID}}active selected{{end}} item" href="{{$.Link}}?type={{$.ViewType}}&sort={{$.SortType}}&state={{$.State}}&labels={{$.SelectLabels}}&milestone={{.ID}}&assignee={{$.AssigneeID}}">{{.Name}}</a>
							{{end}}
						</div>
					</div>

					<!-- Assignee -->
					<div class="ui {{if not .Assignees}}disabled{{end}} dropdown jump item">
						<span class="text">
							{{.i18n.Tr "repo.issues.filter_assignee"}}
							<i class="dropdown icon"></i>
						</span>
						<div class="menu">
							<a class="item" href="{{$.Link}}?q={{$.Keyword}}&type={{$.ViewType}}&sort={{$.SortType}}&state={{$.State}}&labels={{.SelectLabels}}&milestone={{$.MilestoneID}}">{{.i18n.Tr "repo.issues.filter_assginee_no_select"}}</a>
							{{range .Assignees}}
								<a class="{{if eq $.AssigneeID .ID}}active selected{{end}} item" href="{{$.Link}}?type={{$.ViewType}}&sort={{$.SortType}}&state={{$.State}}&labels={{$.SelectLabels}}&milestone={{$.MilestoneID}}&assignee={{.ID}}"><img src="{{.RelAvatarLink}}"> {{.Name}}</a>
							{{end}}
						</div>
					</div>

					{{if .IsSigned}}
						<!-- Type -->
						<div class="ui dropdown type jump item">
							<span class="text">
								{{.i18n.Tr "repo.issues.filter_type"}}
								<i class="dropdown icon"></i>
							</span>
							<div class="menu">
								<a class="{{if eq .ViewType "all"}}active{{end}} item" href="{{$.Link}}?q={{$.Keyword}}&type=all&sort={{$.SortType}}&state={{$.State}}&labels={{.SelectLabels}}&milestone={{$.MilestoneID}}&assignee={{$.AssigneeID}}">{{.i18n.Tr "repo.issues.filter_type.all_issues"}}</a>
								<a class="{{if eq .ViewType "assigned"}}active{{end}} item" href="{{$.Link}}?q={{$.Keyword}}&type=assigned&sort={{$.SortType}}&state={{$.State}}&labels={{.SelectLabels}}&milestone={{$.MilestoneID}}&assignee={{.SignedUser.ID}}">{{.i18n.Tr "repo.issues.filter_type.assigned_to_you"}}</a>
								<a class="{{if eq .ViewType "created_by"}}active{{end}} item" href="{{$.Link}}?q={{$.Keyword}}&type=created_by&sort={{$.SortType}}&state={{$.State}}&labels={{.SelectLabels}}&milestone={{$.MilestoneID}}&assignee={{$.AssigneeID}}">{{.i18n.Tr "repo.issues.filter_type.created_by_you"}}</a>
								<a class="{{if eq .ViewType "mentioned"}}active{{end}} item" href="{{$.Link}}?q={{$.Keyword}}&type=mentioned&sort={{$.SortType}}&state={{$.State}}&labels={{.SelectLabels}}&milestone={{$.MilestoneID}}&assignee={{$.AssigneeID}}">{{.i18n.Tr "repo.issues.filter_type.mentioning_you"}}</a>
							</div>
						</div>
					{{end}}

				</div>
			</div>
		</div>
	</div>
	<div id="board">
		<project-board></project-board>
	</div>

	<script>
	'use strict';
	window.addEventListener('load', function() {
		initBoard();
	});

	function makeColumns(lots) {
		var colorBlack = '#000';
		var colorWhite = '#fff';
		var colorRed = '#ee0701';
		var colorOrange = '#f0ad4e';
		var colorBlue = '#bfd4f2';
		var colorGreen = '#bfe5bf';

		var bugLabel = {
			id: 1,
			title: 'bug',
			color: colorWhite,
			background: colorRed,
		}
		var featureLabel = {
			id: 2,
			title: 'feature',
			color: colorBlack,
			background: colorGreen,
		}
		var inProgressLabel = {
			id: 3,
			title: 'In progress',
			color: colorBlack,
			background: colorBlue,
		}
		var reviewLabel = {
			id: 4,
			title: 'Review',
			color: colorBlack,
			background: colorOrange,
		}

		var v170Milestone = {
			id: 5,
			title: 'v1.7.0',
		}
		var sprintMilestone = {
			id: 6,
			title: 'Sprint #6',
		}

		var backlogColumn = {
			label: {
				title: 'Backlog',
			},
			issues: [
				{
					id: 113,
					title: 'User Story A',
					milestone: v170Milestone,
					labels: [featureLabel],
				},
				{
					id: 456,
					title: 'Bug A',
					milestone: v170Milestone,
					labels: [bugLabel],
				},
			]
		}
		var inProgressColumn = {
			label: inProgressLabel,
			issues: [
				{
					id: 567,
					title: 'Gitea Board',
					milestone: sprintMilestone,
					labels: [featureLabel, inProgressLabel],
				},
				{
					id: 11,
					title: 'Lots of labels',
					milestone: sprintMilestone,
					labels: [
						bugLabel,
						featureLabel,
						bugLabel,
						featureLabel,
						bugLabel,
						featureLabel,
						inProgressLabel,
					],
				},
				{
					id: 12,
					title: 'Very long description with lots of text and details',
					labels: [],
				},
			]
		}
		var reviewColumn = {
			label: reviewLabel,
			issues: [
				{
					id: 42,
					title: 'Super useful feature X',
					milestone: sprintMilestone,
					labels: [featureLabel, reviewLabel],
				},
				{
					id: 43,
					title: 'Really urgent bug',
					milestone: sprintMilestone,
					labels: [bugLabel, reviewLabel],
				},
				{
					id: 31,
					title: 'Music player feature',
					labels: [],
				},
			]
		}
		var closedColumn = {
			label: {
				title: 'Closed',
			},
			issues: [
				{
					id: 55,
					title: 'Automatic code review',
					milestone: v170Milestone,
					labels: [featureLabel],
				}
			]
		}

		if (lots) {
			return [
				backlogColumn,
				inProgressColumn,
				reviewColumn,
				reviewColumn,
				reviewColumn,
				reviewColumn,
				closedColumn,
			]
		}
		return [
			backlogColumn,
			inProgressColumn,
			reviewColumn,
			closedColumn,
		]
	}

	function initBoard() {
		var vueDelimiters = ['[[', ']]'];

		var boardLabelComponent = {
			delimiters: vueDelimiters,
			props: ['label'],
			template: `
				<a
					v-if="label.id"
					class="ui label board-label"
					:href="'/org/projeto/issues?label=' + label.id"
					:style="style"
					:title="label.title"
				>[[label.title]]</a>
				<div
					v-else
					class="ui label board-label"
					:style="style"
				>[[label.title]]</div>
			`,
			computed: {
				style() {
					var style = {}
					if (this.label.background) {
						style['background-color'] = this.label.background
					}
					if (this.label.color) {
						style['color'] = this.label.color
					}
					return style
				}
			}
		}

		var boardColumnComponent = {
			delimiters: vueDelimiters,
			props: ['label'],
			components: {
				'board-label': boardLabelComponent,
			},
			template: `
			<div class="ui segment board-column">
				<!-- column header -->
				<board-label :label="label"></board-label>
				<div class="ui divider"></div>
				<!-- end header -->

				<div class="ui cards board">
					<slot></slot>
				</div>
			</div>
			`,
		}

		var boardCardComponent = {
			delimiters: vueDelimiters,
			props: ['id', 'title', 'milestone', 'labels'],
			components: {
				'board-label': boardLabelComponent,
			},
			template: `
			<div class="card board-card">
				<div class="content">
					<div class="header">[[title]]</div>
					<div class="meta">
						<a :href="'/org/project/issues/' + id">#[[id]]</a>
						<a v-if="milestone" class="milestone" :href="'/org/project/milestones/' + milestone.id">
							<span class="octicon octicon-milestone"></span>
							[[milestone.title]]
						</a>
					</div>
				</div>
				<div v-if="labels.length" class="extra content">
					<board-label v-for="label in labels" :label="label">
				</div>
			</div>
			`,
			props: ['id', 'title', 'milestone', 'labels'],
		}

		var boardComponent = {
			delimiters: vueDelimiters,
			props: ['columns'],
			components: {
				'board-column': boardColumnComponent,
				'board-card': boardCardComponent,
			},
			template: `
			<div><!-- remove this later -->

			<div class="board">
				<board-column
					v-for="column in columns"
					:label="column.label"
				>
					<board-card
						v-for="issue in column.issues"
						:id="issue.id"
						:title="issue.title"
						:milestone="issue.milestone"
						:labels="issue.labels"
					></board-card>
				</board-column>
			</div>

			<!-- remove this later -->
			<button style="margin: 1em auto; display: block;" @click="change">toggle columns</button>
			</div>
			`,
			data() {
				return {
					toggleColumns: false,
					lessColumns: makeColumns(),
					moreColumns: makeColumns(true),
				}
			},
			methods: {
				change() {
					this.toggleColumns = !this.toggleColumns
				}
			},
			computed: {
				columns() {
					if (this.toggleColumns) {
						return this.moreColumns
					}
					return this.lessColumns
				}
			}
		}

		new Vue({
			el: '#board',
			delimiters: vueDelimiters,
			components: {
				'project-board': boardComponent,
			},
		})
	}
	</script>

	<style>
		.board {
			display: flex;
			flex-direction: row;
			flex-wrap: nowrap;
			overflow-x: auto;
			margin: 0 .5em;
		}

		.board-column {
			background-color: #eff1f3 !important;
			border: 1px solid rgba(34,36,38,.15) !important;
			margin: 0 .5em !important;
			padding: 5px !important;
			width: 320px;
			height: 60vh;
			overflow-y: scroll;
			flex: 0 0 auto;
		}

		.board-column > .cards {
			margin: 0 !important;
		}

		.board-column > .board-label {
			margin-left: 5px !important;
			margin-top: 3px !important;
		}

		.board-column > .divider {
			margin: 5px 0;
		}

		.board-column:first-child {
			margin-left: auto !important;
		}

		.board-column:last-child {
			margin-right: auto !important;
		}

		.board-card {
			margin: 3px !important;
		}

		.board-card .header {
			font-size: 1.1em !important;
		}

		.board-card .content {
			padding: 5px 8px !important;
		}

		.board-card .extra.content {
			padding: 5px 8px !important;
		}

		.board-label {
			padding: .4em .6em !important;
			margin-right: .4em !important;
			margin-bottom: .4em !important;
		}
	</style>
</div>
{{template "base/footer" .}}
